id: 5f9c2fcd-86d4-42c9-9a5a-2f4126f39b06
name: terraform
description: |-
  Allow to manage terraform
source_url: "https://github.com/Qovery/lifecycle-templates/blob/main/aws-terraform.yaml"
cloud_provider:
  name: AWS
events: 
  - name: start
    entrypoint: null
    command: ["start"]
  - name: delete 
    entrypoint: null
    command: ["delete"]
resources:
  cpu_milli: 500
  ram_mib: 512
variables:
  - name: AWS_DEFAULT_REGION
    is_secret: false
    default: "us-east2"
    description: "The AWS region you want to target"
  - name: AWS_ACCESS_KEY_ID
    is_secret: true
    default: ""
    description: "Your AWS access key"
  - name: AWS_SECRET_ACCESS_KEY
    is_secret: true
    default: ""
    description: "your aws access secret key"
  - name: JOB_INPUT
    is_secret: true
    description: "The terraform variable that will be injected"
    file: 
      path: "/data/terraform/terraform.tfvars"
    default: |-
      bucket_name="qovery-{{QOVERY_JOB_NAME}}"
dockerfile: |-
  FROM hashicorp/terraform:1.8.5

  RUN <<EOF
  set -e
  apk update
  apk add dumb-init
  adduser -D app
  mkdir /data
  chown -R app:app /data
  EOF

  WORKDIR /data
  USER app

  RUN cat <<EOF > entrypoint.sh
  #!/bin/sh

  if [ "\$JOB_INPUT" != '' ]
  then
    TF_VARS="\$JOB_INPUT"
  fi

  CMD=\$1; shift
  set -ex

  cd terraform
  terraform init -backend-config="key=qovery-terraform-\${QOVERY_JOB_ID}"

  case "\$CMD" in
  start)
    echo 'start command invoked'
    terraform plan -input=false -out=tf.plan -var-file=\$TF_VARS
    terraform apply -input=false -auto-approve tf.plan
    ;;

  stop)
    echo 'stop command invoked'
    exit 0
    ;;

  delete)
    echo 'delete command invoked'
    terraform plan -destroy -out=tf.plan -input=false -var-file=\$TF_VARS
    terraform apply -destroy -auto-approve -input=false tf.plan
    ;;

  raw)
    echo 'raw command invoked'
    terraform "\$1" "\$2" "\$3" "\$4" "\$5" "\$6" "\$7" "\$8" "\$9"
    ;;

  debug)
    echo 'debug command invoked. sleeping for 9999999sec'
    echo 'Use remote shell to connect and execute commands'
    sleep 9999999999
    exit 1
    ;;

  *)
    echo "Command not handled by entrypoint.sh: '\$CMD'"
    exit 1
    ;;
  esac

  EOF

  COPY --chown=app:app . terraform

  RUN <<EOF
  set -e
  chmod +x entrypoint.sh
  cd terraform
  terraform init -backend=false
  EOF

  ENV AWS_DEFAULT_REGION=must-be-set-as-env-var
  ENV AWS_ACCESS_KEY_ID=must-be-set-as-env-var
  ENV AWS_SECRET_ACCESS_KEY=must-be-set-as-env-var
  ENV TF_VARS=must-be-set-as-env-var-file
  #ENV JOB_OUPUT=/mnt/data/terraform.tfvars


  ENTRYPOINT ["/usr/bin/dumb-init", "-v", "--", "/data/entrypoint.sh"]
  CMD ["start"]


